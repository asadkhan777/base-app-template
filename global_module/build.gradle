apply plugin: "com.android.library"

apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android-extensions"


//import static Libs.kotlinStdLib

def rootProguard = rootDir.path + "/base_app/proguard-rules.pro"

android {
    compileSdkVersion Versions.compileSDK
    defaultConfig {

        minSdkVersion Versions.devSDK
        targetSdkVersion Versions.targetSDK

        versionCode 1
        versionName "1.0"

        buildToolsVersion Versions.buildTools

        defaultPublishConfig "debug"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        libraryVariants.all { variant ->
            //      // List all properties
            //      for (Object p : variant.properties) {
            //        print("Property: $p\n")
            //      }
            def varName = variant.name
            print("Assemble Type: $varName\n")
            if (varName == "debug") {
                variant.assemble.doLast { output ->
                    print("Copying module artifact\n")
                    rootProject.archiveArtifact("global_module")
                }
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        release {
            minifyEnabled false

            consumerProguardFiles rootProguard
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), rootProguard
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    dexOptions {
        jumboMode true
        preDexLibraries true
    }
    kapt {
        generateStubs false
        useBuildCache true
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url "https://maven.google.com" }
    }
}


//configurations {
//  rootProject.ext.flavors.each { flavor, config ->
//    print("BuildFlavor: ${flavor}Implementation\n")
//    print("BuildFlavor: ${flavor}DebugImplementation\n")
//    print("BuildFlavor: ${flavor}ReleaseImplementation\n")
//    "$flavor" {
//      "${flavor}Implementation"
//      "${flavor}DebugImplementation"
//      "${flavor}ReleaseImplementation"
//    }
//  }
//}

def nav_version = "2.1.0"
def rv = "2.5.0"
def timber = "com.jakewharton.timber:timber"
def glide = "com.github.bumptech.glide"
def dagger = "com.google.dagger:dagger"
def retrofit2 = "com.squareup.retrofit2"
def fire = "com.google.firebase:firebase"
def rx2 = "io.reactivex.rxjava2"
def archx = "2.0.0"
def roomx = "2.0.0"
def paging = "1.0.1"
def lifecycle = "androidx.lifecycle:lifecycle"
def chuck = "com.readystatesoftware.chuck:library"
def crashlytix = "com.crashlytics.sdk.android:crashlytics"
def kotlin_jdk8 = "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

dependencies {
    implementation fileTree(include: ["*.jar"], dir: "libs")


    api Libs.kotlinStdLib
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5"

    api "androidx.work:work-runtime:2.3.4"
    api "androidx.constraintlayout:constraintlayout:1.1.3"
    api "androidx.legacy:legacy-support-v4:1.0.0"
    api "androidx.appcompat:appcompat:1.1.0"
    api "androidx.fragment:fragment-ktx:1.3.0-alpha06"
    api "androidx.navigation:navigation-fragment-ktx:2.2.2"
    api "androidx.navigation:navigation-ui-ktx:2.2.2"
    api "androidx.core:core-ktx:1.3.0"
    api "androidx.multidex:multidex:2.0.1"
    api "androidx.recyclerview:recyclerview:1.1.0"

    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    api "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    api "androidx.lifecycle:lifecycle-common-java8:2.2.0"

    api "androidx.room:room-runtime:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"
    api "androidx.room:room-ktx:2.2.5"

    api "com.jakewharton.timber:timber:4.7.1"

    //retrofit(Network)
    api "com.squareup.retrofit2:retrofit:2.9.0"
    api "com.squareup.retrofit2:converter-gson:2.9.0"
    /*Please don't update this, newer version doesn"t support <API 19*/
    //noinspection GradleDependency
    api "com.squareup.okhttp3:logging-interceptor:3.10.0"

    debugImplementation "com.github.ChuckerTeam.Chucker:library:3.2.0"
    releaseImplementation "com.github.ChuckerTeam.Chucker:library-no-op:3.2.0"

    implementation "com.google.code.gson:gson:2.8.6"
    implementation "com.google.android.libraries.places:places:2.3.0"

    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.19.0"
    testImplementation "org.robolectric:robolectric:3.3.2"
    testImplementation "org.robolectric:shadows-support-v4:3.3.2"

    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"

}

