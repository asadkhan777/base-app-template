apply plugin: "com.android.application"

apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android-extensions"
apply from: "./flavors.gradle"


//import static Versions.*

android {
  compileSdkVersion Versions.compileSDK
  defaultConfig {
    applicationId "com.asadkhan.base_app"

    minSdkVersion Versions.devSDK
    targetSdkVersion Versions.targetSDK

    versionCode 1
    versionName "1.0"
    buildToolsVersion Versions.buildTools

    defaultPublishConfig "debug"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    debug {
      minifyEnabled false
      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
    }
  }
  flavorDimensions "scope"
  productFlavors {
    project.flavors.each { flavor, config ->
      "$flavor" {
        print("Flavor: $flavor\n")
        dimension "scope"
        if (flavor != "full") {
          versionNameSuffix ".$flavor"
        }
      }
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8.toString()
    targetCompatibility JavaVersion.VERSION_1_8.toString()
  }
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()
  }
  lintOptions {
    abortOnError false
  }
  dexOptions {
    jumboMode true
    preDexLibraries true
  }
}

configurations {
  project.flavors.each { flavor, config ->
    print("BuildFlavor: ${flavor}Implementation\n")
    print("BuildFlavor: ${flavor}DebugImplementation\n")
    print("BuildFlavor: ${flavor}ReleaseImplementation\n")
    "$flavor" {
      "${flavor}Implementation"
      "${flavor}DebugImplementation"
      "${flavor}ReleaseImplementation"
    }
  }
}

allprojects {
  repositories {
    flatDir {
      dirs "libs"
    }
  }
}
dependencies {
  implementation fileTree(include: ["*.jar"], dir: "libs")

  fullApi project(":global_module")

  slimApi fileTree(include: ["*.aar"], dir: "libs")
  // All pre-build aar libs will be found in this dir
  slimApi fileTree(include: ["*.aar"], dir: "cached_libs")

  // Dependencies which are used by all modules
  // These are being pulled from global_module in full mode
  // Importing explicitly in slim mode since transitive dependencies (TDs) don't work with AARs
  // Will have to rely on these until we have support for TDs with AAR bundles
  slimApi Libs.kotlinStdLib
  slimApi "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5"

  slimApi "androidx.work:work-runtime:2.3.4"
  slimApi "androidx.constraintlayout:constraintlayout:1.1.3"
  slimApi "androidx.legacy:legacy-support-v4:1.0.0"
  slimApi "androidx.appcompat:appcompat:1.1.0"
  slimApi "androidx.fragment:fragment-ktx:1.3.0-alpha06"
  slimApi "androidx.navigation:navigation-fragment-ktx:2.3.0"
  slimApi "androidx.navigation:navigation-ui-ktx:2.3.0"
  slimApi "androidx.core:core-ktx:1.3.0"
  slimApi "androidx.multidex:multidex:2.0.1"
  slimApi "androidx.recyclerview:recyclerview:1.1.0"

  slimApi "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
  slimApi "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
  slimApi "androidx.lifecycle:lifecycle-common-java8:2.2.0"

  slimApi "com.jakewharton.timber:timber:4.7.1"

  slimApi "com.google.code.gson:gson:2.8.6"
  slimApi "com.google.android.libraries.places:places:2.3.0"

  // Dependencies only used by app module
  api 'com.github.quickpermissions:quickpermissions-kotlin:0.4.0'

  testImplementation "junit:junit:4.12"
  testImplementation "org.mockito:mockito-core:2.19.0"
  testImplementation "org.robolectric:robolectric:3.3.2"

  androidTestImplementation "androidx.test:runner:1.2.0"
  androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
}


repositories {
  google()
}
